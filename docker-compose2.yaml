version: '3'
services:
    # https://www.jaegertracing.io/docs/1.59/
    jaeger-all-in-one:
        image: jaegertracing/all-in-one:latest
        restart: always
        ports:
            - '16686:16686'
            - '14268'
            - '14250'

    zipkin-all-in-one:
        image: openzipkin/zipkin:latest
        restart: always
        ports:
            - '9411:9411'

    prometheus:
        container_name: prometheus
        image: prom/prometheus:latest
        restart: always
        volumes:
            - ./.docker/prometheus.yaml:/etc/prometheus/prometheus.yml
        ports:
            - '9090:9090'

    otel-collector:
        image: otel/opentelemetry-collector:latest
        restart: always
        command: ['--config=/etc/otel-collector-config.yaml']
        volumes:
            - ./.docker/otel-collector-config.yaml:/etc/otel-collector-config.yaml
        ports:
            - '1888:1888' # pprof extension
            - '8888:8888' # Prometheus metrics exposed by the collector
            - '8889:8889' # Prometheus exporter metrics
            - '13133:13133' # health_check extension
            - '4317:4317' # OTLP gRPC receiver
            - '55679:55679' # zpages extension

    grafana:
        container_name: grafana
        image: grafana/grafana:latest
        restart: always
        ports:
            - '3001:3000'
        depends_on:
            - prometheus

    goapp:
        container_name: goapp
        image: golang:latest
        build:
            context: .
        environment:
            - TITLE=Microservice Demo
            - CONTENT=This is a demo of a microservice
            - BACKGROUND_COLOR=green
            - RESPONSE_TIME=1000
            - EXTERNAL_CALL_URL=http://goapp2:8181
            - EXTERNAL_CALL_METHOD=GET
            # pro open telemetry saber qual service eh cada um ()
            - REQUEST_NAME_OTEL=microservice-demo-request
            - OTEL_SERVICE_NAME=microservice-demo
            - OTEL_EXPORTER_OTLP_ENDPOINT=otel-collector:4317
            - HTTP_PORT=:8080
        ports:
            - '8080:8080'
        depends_on:
            - jaeger-all-in-one
            - otel-collector
        volumes:
            - .:/go/src/app
        command: ['tail', '-f', '/dev/null']
